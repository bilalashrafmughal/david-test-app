import { IconButton, Paper, Typography } from "@mui/material";
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import styled from "styled-components";
import { toggleTheme } from "../../theme/store";

export default function Navbar() {
  const theme = useSelector((state) => state.theme);
  const dispatch = useDispatch();
  return (
    <StyledNavbar className="flex relative z-20 min-h-128 justify-between px-4 sm:px-8 md:px-24">
      {/* LEFT SIDE */}
      <div className="flex flex-1">
        <div className="flex items-center">
          <img className="md:mb-4" src="/assets/icons/hacker.svg" />
          <div className="ml-8">
            <Typography variant="h5" className="text-24 font-700">
              {" "}
              StopSpy{" "}
            </Typography>
            <Typography
              variant="body2"
              className="text-16 font-500 hidden md:block"
            >
              {" "}
              We eliminate all spy tools{" "}
            </Typography>
          </div>
        </div>
      </div>
      {/* RIGHT SIDE */}
      <div className="flex items-center h-full overflow-x-auto">
        <IconButton
          className="w-20 h-20"
          onClick={(ev) => dispatch(toggleTheme())}
        >
          <ThemeSwitchIcon isDark={theme === "dark"} />
        </IconButton>

        <IconButton
          size="medium"
          className="w-20 h-20"
          // onClick={userMenuClick}
        >
          <UserIcon isDark={theme === "dark"} />
        </IconButton>
      </div>
    </StyledNavbar>
  );
}

const StyledNavbar = styled(Paper)`
  height: 133px;
  display: flex;
  align-items: center;
  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
`;

const ThemeSwitchIcon = ({ isDark }) => {
  if (isDark) {
    return (
      <svg
        width="24"
        height="25"
        viewBox="0 0 24 25"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12 0.833374C12.4832 0.833374 12.875 1.22512 12.875 1.70837V3.45837C12.875 3.94162 12.4832 4.33337 12 4.33337C11.5167 4.33337 11.125 3.94162 11.125 3.45837V1.70837C11.125 1.22512 11.5167 0.833374 12 0.833374ZM12 18.3334C15.2216 18.3334 17.8333 15.7217 17.8333 12.5C17.8333 9.27838 15.2216 6.66671 12 6.66671C8.77832 6.66671 6.16665 9.27838 6.16665 12.5C6.16665 15.7217 8.77832 18.3334 12 18.3334ZM12 16.5834C9.74482 16.5834 7.91665 14.7552 7.91665 12.5C7.91665 10.2449 9.74482 8.41671 12 8.41671C14.2551 8.41671 16.0833 10.2449 16.0833 12.5C16.0833 14.7552 14.2551 16.5834 12 16.5834ZM22.7916 13.375C23.2749 13.375 23.6666 12.9833 23.6666 12.5C23.6666 12.0168 23.2749 11.625 22.7916 11.625H21.0416C20.5584 11.625 20.1666 12.0168 20.1666 12.5C20.1666 12.9833 20.5584 13.375 21.0416 13.375H22.7916ZM12 20.6667C12.4832 20.6667 12.875 21.0585 12.875 21.5417V23.2917C12.875 23.775 12.4832 24.1667 12 24.1667C11.5167 24.1667 11.125 23.775 11.125 23.2917V21.5417C11.125 21.0585 11.5167 20.6667 12 20.6667ZM2.95831 13.375C3.44156 13.375 3.83331 12.9833 3.83331 12.5C3.83331 12.0168 3.44156 11.625 2.95831 11.625H1.20831C0.725064 11.625 0.333313 12.0168 0.333313 12.5C0.333313 12.9833 0.725064 13.375 1.20831 13.375H2.95831ZM2.92293 3.42342C3.26464 3.08172 3.81866 3.08172 4.16036 3.42342L5.91036 5.17342C6.25207 5.51513 6.25207 6.06915 5.91036 6.41086C5.56866 6.75257 5.01464 6.75257 4.67293 6.41086L2.92293 4.66086C2.58122 4.31915 2.58122 3.76513 2.92293 3.42342ZM4.16036 21.5775C3.81866 21.9192 3.26464 21.9192 2.92293 21.5775C2.58122 21.2358 2.58122 20.6818 2.92293 20.3401L4.67293 18.5901C5.01464 18.2484 5.56866 18.2484 5.91036 18.5901C6.25207 18.9318 6.25207 19.4858 5.91036 19.8275L4.16036 21.5775ZM21.077 3.42342C20.7353 3.08172 20.1813 3.08172 19.8396 3.42342L18.0896 5.17342C17.7479 5.51513 17.7479 6.06915 18.0896 6.41086C18.4313 6.75257 18.9853 6.75257 19.327 6.41086L21.077 4.66086C21.4187 4.31915 21.4187 3.76513 21.077 3.42342ZM19.8396 21.5775C20.1813 21.9192 20.7353 21.9192 21.077 21.5775C21.4187 21.2358 21.4187 20.6818 21.077 20.3401L19.327 18.5901C18.9853 18.2484 18.4313 18.2484 18.0896 18.5901C17.7479 18.9318 17.7479 19.4858 18.0896 19.8275L19.8396 21.5775Z"
          fill="#FCFCFC"
        />
      </svg>
    );
  }
  return (
    <svg
      width="22"
      height="25"
      viewBox="0 0 22 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M20.3634 18.3348C17.1412 23.9158 10.0049 25.8279 4.42394 22.6058C2.9041 21.7283 1.62465 20.5412 0.650153 19.1261C0.324343 18.653 0.535097 17.9996 1.07595 17.806C5.47128 16.2329 7.82539 14.4098 9.19143 11.8023C10.6295 9.0571 11.0012 6.05006 9.99514 1.92822C9.85603 1.35826 10.3062 0.815574 10.8921 0.847005C12.7085 0.94446 14.4831 1.46624 16.0924 2.39537C21.6734 5.61753 23.5855 12.7539 20.3634 18.3348ZM10.7416 12.6143C9.28175 15.401 6.87821 17.3965 2.78786 19.0297C3.49749 19.8415 4.34152 20.5375 5.29894 21.0902C10.0429 23.8291 16.1089 22.2037 18.8478 17.4598C21.5867 12.7159 19.9614 6.64983 15.2174 3.91092C14.1942 3.32016 13.0943 2.92347 11.9599 2.72613C12.7149 6.67411 12.2279 9.77709 10.7416 12.6143Z"
        fill="#15171A"
      />
    </svg>
  );
};

const UserIcon = ({ isDark }) => {
  if (isDark) {
    return (
      <svg
        width="20"
        height="25"
        viewBox="0 0 20 25"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M16.7132 14.8333C18.1622 14.8333 19.3369 16.0079 19.3369 17.4569V18.1283C19.3369 19.1716 18.964 20.1806 18.2856 20.9732C16.4546 23.1122 13.6696 24.1679 9.99998 24.1679C6.32981 24.1679 3.54612 23.1119 1.71877 20.972C1.04238 20.1799 0.670776 19.1725 0.670776 18.1309V17.4569C0.670776 16.0079 1.84544 14.8333 3.29447 14.8333H16.7132ZM16.7132 16.5833H3.29447C2.81194 16.5833 2.42078 16.9744 2.42078 17.4569V18.1309C2.42078 18.7558 2.64374 19.3603 3.04957 19.8355C4.51177 21.5478 6.80529 22.4179 9.99998 22.4179C13.1947 22.4179 15.4902 21.5478 16.9561 19.8352C17.3632 19.3596 17.5869 18.7543 17.5869 18.1283V17.4569C17.5869 16.9744 17.1957 16.5833 16.7132 16.5833ZM9.99998 0.838745C13.2216 0.838745 15.8333 3.45042 15.8333 6.67208C15.8333 9.89374 13.2216 12.5054 9.99998 12.5054C6.77832 12.5054 4.16664 9.89374 4.16664 6.67208C4.16664 3.45042 6.77832 0.838745 9.99998 0.838745ZM9.99998 2.58875C7.74482 2.58875 5.91665 4.41692 5.91665 6.67208C5.91665 8.92724 7.74482 10.7554 9.99998 10.7554C12.2551 10.7554 14.0833 8.92724 14.0833 6.67208C14.0833 4.41692 12.2551 2.58875 9.99998 2.58875Z"
          fill="#FCFCFC"
        />
      </svg>
    );
  }
  return (
    <svg
      width="20"
      height="25"
      viewBox="0 0 20 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M16.7132 14.8333C18.1622 14.8333 19.3369 16.0079 19.3369 17.4569V18.1283C19.3369 19.1716 18.964 20.1806 18.2856 20.9732C16.4546 23.1122 13.6696 24.1679 9.99998 24.1679C6.32981 24.1679 3.54612 23.1119 1.71877 20.972C1.04238 20.1799 0.670776 19.1725 0.670776 18.1309V17.4569C0.670776 16.0079 1.84544 14.8333 3.29447 14.8333H16.7132ZM16.7132 16.5833H3.29447C2.81194 16.5833 2.42078 16.9744 2.42078 17.4569V18.1309C2.42078 18.7559 2.64374 19.3603 3.04957 19.8355C4.51177 21.5478 6.80529 22.4179 9.99998 22.4179C13.1947 22.4179 15.4902 21.5478 16.9561 19.8352C17.3632 19.3596 17.5869 18.7543 17.5869 18.1283V17.4569C17.5869 16.9744 17.1957 16.5833 16.7132 16.5833ZM9.99998 0.838745C13.2216 0.838745 15.8333 3.45042 15.8333 6.67208C15.8333 9.89374 13.2216 12.5054 9.99998 12.5054C6.77832 12.5054 4.16664 9.89374 4.16664 6.67208C4.16664 3.45042 6.77832 0.838745 9.99998 0.838745ZM9.99998 2.58875C7.74482 2.58875 5.91665 4.41692 5.91665 6.67208C5.91665 8.92724 7.74482 10.7554 9.99998 10.7554C12.2551 10.7554 14.0833 8.92724 14.0833 6.67208C14.0833 4.41692 12.2551 2.58875 9.99998 2.58875Z"
        fill="#15171A"
      />
    </svg>
  );
};
